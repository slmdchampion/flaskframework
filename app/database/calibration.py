from sqlalchemy import text, create_engine, MetaData, ForeignKey
from app.database.base import sa

class Calibration_certificates(sa.Model):
    __tablename__ = 'calibration certificates'
    id = sa.Column(sa.Integer, primary_key=True)
    certificate_number = sa.Column('certificate number', sa.String) 
    calibration_date = sa.Column('calibration date', sa.Date)
    due_date = sa.Column('due date', sa.Date)
    gauge = sa.Column(sa.Integer, ForeignKey("gauges.ID"))
    as_found = sa.Column('as found', sa.String)
    as_left = sa.Column('as left', sa.String)
    requirement1 = sa.Column('requirement 1', sa.Float, default=0)
    requirement2 = sa.Column('requirement 2', sa.Float, default=0)
    requirement3 = sa.Column('requirement 3', sa.Float, default=0)
    requirement4 = sa.Column('requirement 4', sa.Float, default=0)
    requirement5 = sa.Column('requirement 5', sa.Float, default=0)
    requirement6 = sa.Column('requirement 6', sa.Float, default=0)
    requirement7 = sa.Column('requirement 7', sa.Float, default=0)
    requirement8 = sa.Column('requirement 8', sa.Float, default=0)
    requirement9 = sa.Column('requirement 9', sa.Float, default=0)
    requirement10 = sa.Column('requirement 10', sa.Float, default=0)
    requirement11 = sa.Column('requirement 11', sa.Float, default=0)
    requirement12 = sa.Column('requirement 12', sa.Float, default=0)
    requirement13 = sa.Column('requirement 13', sa.Float, default=0)
    requirement14 = sa.Column('requirement 14', sa.Float, default=0)
    requirement15 = sa.Column('requirement 15', sa.Float, default=0)
    requirement16 = sa.Column('requirement 16', sa.Float, default=0)
    requirement17 = sa.Column('requirement 17', sa.Float, default=0)
    requirement18 = sa.Column('requirement 18', sa.Float, default=0)
    requirement19 = sa.Column('requirement 19', sa.Float, default=0)
    requirement20 = sa.Column('requirement 20', sa.Float, default=0)
    requirement21 = sa.Column('requirement 21', sa.Float, default=0)
    requirement22 = sa.Column('requirement 22', sa.Float, default=0)
    requirement23 = sa.Column('requirement 23', sa.Float, default=0)
    requirement24 = sa.Column('requirement 24', sa.Float, default=0)
    requirement25 = sa.Column('requirement 25', sa.Float, default=0)
    requirement26 = sa.Column('requirement 26', sa.Float, default=0)
    requirement27 = sa.Column('requirement 27', sa.Float, default=0)
    requirement28 = sa.Column('requirement 28', sa.Float, default=0)
    requirement29 = sa.Column('requirement 29', sa.Float, default=0)
    requirement30 = sa.Column('requirement 30', sa.Float, default=0)
    measurement1 = sa.Column('measurement 1', sa.Float, default=0)
    measurement2 = sa.Column('measurement 2', sa.Float, default=0)
    measurement3 = sa.Column('measurement 3', sa.Float, default=0)
    measurement4 = sa.Column('measurement 4', sa.Float, default=0)
    measurement5 = sa.Column('measurement 5', sa.Float, default=0)
    measurement6 = sa.Column('measurement 6', sa.Float, default=0)
    measurement7 = sa.Column('measurement 7', sa.Float, default=0)
    measurement8 = sa.Column('measurement 8', sa.Float, default=0)
    measurement9 = sa.Column('measurement 9', sa.Float, default=0)
    measurement10 = sa.Column('measurement 10', sa.Float, default=0)
    measurement11 = sa.Column('measurement 11', sa.Float, default=0)
    measurement12 = sa.Column('measurement 12', sa.Float, default=0)
    measurement13 = sa.Column('measurement 13', sa.Float, default=0)
    measurement14 = sa.Column('measurement 14', sa.Float, default=0)
    measurement15 = sa.Column('measurement 15', sa.Float, default=0)
    measurement16 = sa.Column('measurement 16', sa.Float, default=0)
    measurement17 = sa.Column('measurement 17', sa.Float, default=0)
    measurement18 = sa.Column('measurement 18', sa.Float, default=0)
    measurement19 = sa.Column('measurement 19', sa.Float, default=0)
    measurement20 = sa.Column('measurement 20', sa.Float, default=0)
    measurement21 = sa.Column('measurement 21', sa.Float, default=0)
    measurement22 = sa.Column('measurement 22', sa.Float, default=0)
    measurement23 = sa.Column('measurement 23', sa.Float, default=0)
    measurement24 = sa.Column('measurement 24', sa.Float, default=0)
    measurement25 = sa.Column('measurement 25', sa.Float, default=0)
    measurement26 = sa.Column('measurement 26', sa.Float, default=0)
    measurement27 = sa.Column('measurement 27', sa.Float, default=0)
    measurement28 = sa.Column('measurement 28', sa.Float, default=0)
    measurement29 = sa.Column('measurement 29', sa.Float, default=0)
    measurement30 = sa.Column('measurement 30', sa.Float, default=0)
    bool1 = sa.Column('bool 1', sa.Boolean)
    bool2 = sa.Column('bool 2', sa.Boolean)
    bool3 = sa.Column('bool 3', sa.Boolean)
    qualification1 = sa.Column('qualification 1', sa.String)
    qualification2 = sa.Column('qualification 2', sa.String)
    qualification3 = sa.Column('qualification 3', sa.String)
    qualification4 = sa.Column('qualification 4', sa.String)
    qualification5 = sa.Column('qualification 5', sa.String)
    standard1 = sa.Column('Standard 1', sa.Integer, ForeignKey("gauges.ID"))
    standard2 = sa.Column('Standard 2', sa.Integer, ForeignKey("gauges.ID"))
    standard3 = sa.Column('Standard 3', sa.Integer, ForeignKey("gauges.ID"))
    standard4 = sa.Column('Standard 4', sa.Integer, ForeignKey("gauges.ID"))

class Calibration_references(sa.Model):
    __tablename__ = 'calibration references'
    id = sa.Column(sa.Integer, primary_key=True)
    requirement1 = sa.Column('requirement 1', sa.Float, default=0)
    requirement2 = sa.Column('requirement 2', sa.Float, default=0)
    requirement3 = sa.Column('requirement 3', sa.Float, default=0)
    requirement4 = sa.Column('requirement 4', sa.Float, default=0)
    requirement5 = sa.Column('requirement 5', sa.Float, default=0)
    requirement6 = sa.Column('requirement 6', sa.Float, default=0)
    requirement7 = sa.Column('requirement 7', sa.Float, default=0)
    requirement8 = sa.Column('requirement 8', sa.Float, default=0)
    requirement9 = sa.Column('requirement 9', sa.Float, default=0)
    requirement10 = sa.Column('requirement 10', sa.Float, default=0)
    requirement11 = sa.Column('requirement 11', sa.Float, default=0)
    requirement12 = sa.Column('requirement 12', sa.Float, default=0)
    requirement13 = sa.Column('requirement 13', sa.Float, default=0)
    requirement14 = sa.Column('requirement 14', sa.Float, default=0)
    requirement15 = sa.Column('requirement 15', sa.Float, default=0)
    requirement16 = sa.Column('requirement 16', sa.Float, default=0)
    requirement17 = sa.Column('requirement 17', sa.Float, default=0)
    requirement18 = sa.Column('requirement 18', sa.Float, default=0)
    requirement19 = sa.Column('requirement 19', sa.Float, default=0)
    requirement20 = sa.Column('requirement 20', sa.Float, default=0)
    requirement21 = sa.Column('requirement 21', sa.Float, default=0)
    requirement22 = sa.Column('requirement 22', sa.Float, default=0)
    requirement23 = sa.Column('requirement 23', sa.Float, default=0)
    requirement24 = sa.Column('requirement 24', sa.Float, default=0)
    requirement25 = sa.Column('requirement 25', sa.Float, default=0)
    requirement26 = sa.Column('requirement 26', sa.Float, default=0)
    requirement27 = sa.Column('requirement 27', sa.Float, default=0)
    requirement28 = sa.Column('requirement 28', sa.Float, default=0)
    requirement29 = sa.Column('requirement 29', sa.Float, default=0)
    requirement30 = sa.Column('requirement 30', sa.Float, default=0)   
    bool1 = sa.Column('bool 1', sa.Boolean)
    bool2 = sa.Column('bool 2', sa.Boolean)
    bool3 = sa.Column('bool 3', sa.Boolean)
    standard1 = sa.Column('Standard 1', sa.Integer, ForeignKey("gauges.ID"))
    standard2 = sa.Column('Standard 2', sa.Integer, ForeignKey("gauges.ID"))
    standard3 = sa.Column('Standard 3', sa.Integer, ForeignKey("gauges.ID"))
    standard4 = sa.Column('Standard 4', sa.Integer, ForeignKey("gauges.ID"))

class Gauges(sa.Model):
    id = sa.Column('ID', sa.Integer, primary_key=True)
    description = sa.Column('Description', sa.String)
    serial_number = sa.Column('Serial Number', sa.String)
    calibration_frequency = sa.Column('calibration frequency', sa.Integer)
    calibration_method = sa.Column('Calibration Method', sa.Integer)
    acceptance_citeria = sa.Column('Acceptance Criteria', sa.Integer)
    last_calibration = sa.Column('Last Calibration', sa.Date)
    calibration_due = sa.Column('Calibration Due', sa.Date)
    gauge_type = sa.Column('Gauge Type', sa.Integer, sa.ForeignKey("gauge types.ID"))
    connections = sa.Column('Connections', sa.String)
    gauge_status = sa.Column('Gauge Status', sa.Integer, sa.ForeignKey("gauge status.ID"))
    owner = sa.Column('Owner', sa.Integer, sa.ForeignKey("gauge owners.ID"))
    location = sa.Column('Location', sa.String)
    column14 = sa.Column('Column 14', sa.Integer)
    # references = sa.relationship('Calibration_references', backref='gauges', lazy='dynamic', foreign_keys=['Standard1', 'Standard2', 'Standard3', 'Standard4'])
    certificates = sa.relationship('Calibration_certificates', backref='gaugedata', foreign_keys=[Calibration_certificates.gauge])
class Gauge_owners(sa.Model):
    __tablename__ = 'gauge owners'
    id = sa.Column('ID', sa.Integer, primary_key=True)
    owner = sa.Column('Owner', sa.String)
    notes = sa.Column('Notes', sa.String)
    gauges = sa.relationship('Gauges', backref='owners', lazy='dynamic')

class Gauge_status(sa.Model):
    __tablename__ = 'gauge status'
    id = sa.Column('ID', sa.Integer, primary_key=True)
    status = sa.Column('Status', sa.String)
    notes = sa.Column(sa.String)
    gauges = sa.relationship('Gauges', backref='status', lazy='dynamic')
    
class Gauge_types(sa.Model):
    __tablename__ = 'gauge types'
    id = sa.Column('ID', sa.Integer, primary_key=True)
    description = sa.Column('Description', sa.String)
    calibration_reference = sa.Column('calibration reference', sa.Integer, ForeignKey("calibration references.ID"))
    gauges = sa.relationship('Gauges', backref='type', lazy='dynamic')

class Uncertainties(sa.Model):
    id = sa.Column('ID', sa.Integer, primary_key=True)
    process = sa.Column(sa.String)
    gauge_type = sa.Column('gauge type', sa.Integer, ForeignKey("gauge types.ID"))
    uncertainty = sa.Column(sa.Float)

class Database:
    def get_test_table(self):
        result = sa.session.execute(text("SELECT * FROM `test`.`table`"))
        return result